types: ./types.graphql
functions:
  signIn:
    handler:
      code:
        src: ./src/signIn.js
    type: resolver
    schema: ./src/signIn.graphql
  signUp:
    handler:
      code:
        src: ./src/signUp.js
    type: resolver
    schema: ./src/signUp.graphql
  signInGuest:
    handler:
      code:
        src: ./src/signInGuest.js
    type: resolver
    schema: ./src/signInGuest.graphql
  manualGuestGroupUpdate:
    handler:
      code:
        src: ./src/manualGuestGroupUpdate.js
    type: resolver
    schema: ./src/manualGuestGroupUpdate.graphql
  saveGuestGroupForm:
    handler:
      code:
        src: ./src/saveGuestGroupForm.js
        environment:
          MAILGUN_API_KEY: ${env:MAILGUN_API_KEY}
          MAILGUN_DOMAIN: ${env:MAILGUN_DOMAIN}
          MAILGUN_TAG: ${env:MAILGUN_TAG}
    type: resolver
    schema: ./src/saveGuestGroupForm.graphql
  addPartner:
    handler:
      code:
        src: ./src/addPartner.js
    type: resolver
    schema: ./src/addPartner.graphql
  addGuests:
    handler:
      code:
        src: ./src/addGuests.js
    type: resolver
    schema: ./src/addGuests.graphql
permissions:
  - operation: File.read
    authenticated: true
  - operation: File.create
    authenticated: true
  - operation: File.update
    authenticated: true
  - operation: File.delete
    authenticated: true
  - operation: Guest.read
  - operation: Guest.create
    authenticated: true
  - operation: Guest.update
    authenticated: true
  - operation: Guest.delete
    authenticated: true
  - operation: GuestGroup.read
  - operation: GuestGroup.create
    authenticated: true
  - operation: GuestGroup.update
    authenticated: true
    query: ./permissions/updateGuestGroup.graphql
  - operation: GuestGroup.delete
    authenticated: true
  - operation: User.read
  - operation: User.create
    authenticated: true
  - operation: User.update
    authenticated: true
  - operation: User.delete
    authenticated: true
  - operation: Wedding.read
  - operation: Wedding.create
    authenticated: true
  - operation: Wedding.update
    authenticated: true
  - operation: Wedding.delete
    authenticated: true
  - operation: WeddingChurch.read
  - operation: WeddingChurch.create
    authenticated: true
  - operation: WeddingChurch.update
    authenticated: true
  - operation: WeddingChurch.delete
    authenticated: true
  - operation: WeddingParty.read
  - operation: WeddingParty.create
    authenticated: true
  - operation: WeddingParty.update
    authenticated: true
  - operation: WeddingParty.delete
    authenticated: true
  - operation: Subscriber.read
  - operation: Subscriber.create
  - operation: Subscriber.update
  - operation: Subscriber.delete
  - operation: GuestGroupOnGuest.*
    authenticated: true
  - operation: UserOnWedding.*
    authenticated: true
  - operation: WeddingOnGuestGroup.*
    authenticated: true
  - operation: WeddingOnWeddingChurch.*
    authenticated: true
  - operation: WeddingOnWeddingParty.*
    authenticated: true
rootTokens: []
